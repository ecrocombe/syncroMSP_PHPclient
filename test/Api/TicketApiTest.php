<?php
/**
 * TicketApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Syncro
 *
 * Welcome to the official Syncro API Docs.  To use these docs, you will need an active Syncro account. You can sign up for one here: [Syncro](https://syncromsp.com)  If you already have an active account, fill in your subdomain below and then click \"Authorize\" and fill in your api-key. The key is specific to your user account so it is found on the your user profile page.  Please review the [API License Agreement](https://syncromsp.com/syncromsp-api-license-agreement/) before using our API. By accessing our API, you are agreeing to the API License Agreement.  Please note there is a rate limit of 180 requests per minute per IP address on API Usage.
 *
 * OpenAPI spec version: v1
 * Contact: help@syncromsp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.36
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace VereTech\SyncroMSP_PHPclient\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * TicketApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TicketApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for ticketsGet
     *
     * Returns a paginated list of Tickets.
     *
     */
    public function testTicketsGet()
    {
    }

    /**
     * Test case for ticketsIdAddLineItemPost
     *
     * Creates a Ticket Line Item.
     *
     */
    public function testTicketsIdAddLineItemPost()
    {
    }

    /**
     * Test case for ticketsIdAttachFileUrlPost
     *
     * Attach a file to a Ticket.
     *
     */
    public function testTicketsIdAttachFileUrlPost()
    {
    }

    /**
     * Test case for ticketsIdChargeTimerEntryPost
     *
     * Charges a Ticket Timer.
     *
     */
    public function testTicketsIdChargeTimerEntryPost()
    {
    }

    /**
     * Test case for ticketsIdCommentPost
     *
     * Adds a Comment to a Ticket.
     *
     */
    public function testTicketsIdCommentPost()
    {
    }

    /**
     * Test case for ticketsIdDelete
     *
     * Deletes a Ticket by ID.
     *
     */
    public function testTicketsIdDelete()
    {
    }

    /**
     * Test case for ticketsIdDeleteAttachmentPost
     *
     * Deletes a Ticket Attachment.
     *
     */
    public function testTicketsIdDeleteAttachmentPost()
    {
    }

    /**
     * Test case for ticketsIdDeleteTimerEntryPost
     *
     * Deletes a Ticket Timer.
     *
     */
    public function testTicketsIdDeleteTimerEntryPost()
    {
    }

    /**
     * Test case for ticketsIdGet
     *
     * Retrieves a Ticket by ID.
     *
     */
    public function testTicketsIdGet()
    {
    }

    /**
     * Test case for ticketsIdPrintPost
     *
     * Prints a Ticket by ID.
     *
     */
    public function testTicketsIdPrintPost()
    {
    }

    /**
     * Test case for ticketsIdPut
     *
     * Updates an existing Ticket by ID.
     *
     */
    public function testTicketsIdPut()
    {
    }

    /**
     * Test case for ticketsIdRemoveLineItemPost
     *
     * Deletes a Ticket Line Item.
     *
     */
    public function testTicketsIdRemoveLineItemPost()
    {
    }

    /**
     * Test case for ticketsIdTimerEntryPost
     *
     * Create a Ticket Timer for a Ticket.
     *
     */
    public function testTicketsIdTimerEntryPost()
    {
    }

    /**
     * Test case for ticketsIdUpdateLineItemPut
     *
     * Updates an existing Ticket Line Item.
     *
     */
    public function testTicketsIdUpdateLineItemPut()
    {
    }

    /**
     * Test case for ticketsIdUpdateTimerEntryPut
     *
     * Updates an existing Ticket Timer.
     *
     */
    public function testTicketsIdUpdateTimerEntryPut()
    {
    }

    /**
     * Test case for ticketsPost
     *
     * Creates a Ticket.
     *
     */
    public function testTicketsPost()
    {
    }

    /**
     * Test case for ticketsSettingsGet
     *
     * Returns Tickets Settings.
     *
     */
    public function testTicketsSettingsGet()
    {
    }
}
