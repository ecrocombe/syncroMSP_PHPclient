<?php
/**
 * InlineResponse2003Customer
 *
 * PHP version 5
 *
 * @category Class
 * @package  VereTech\SyncroMSP_PHPclient\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Syncro
 *
 * Welcome to the official Syncro API Docs.  To use these docs, you will need an active Syncro account. You can sign up for one here: [Syncro](https://syncromsp.com)  If you already have an active account, fill in your subdomain below and then click \"Authorize\" and fill in your api-key. The key is specific to your user account so it is found on the your user profile page.  Please review the [API License Agreement](https://syncromsp.com/syncromsp-api-license-agreement/) before using our API. By accessing our API, you are agreeing to the API License Agreement.  Please note there is a rate limit of 180 requests per minute per IP address on API Usage.
 *
 * OpenAPI spec version: v1
 * Contact: help@syncromsp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.36
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace VereTech\SyncroMSP_PHPclient\Client\Model;

use \ArrayAccess;
use \VereTech\SyncroMSP_PHPclient\Client\ObjectSerializer;

/**
 * InlineResponse2003Customer Class Doc Comment
 *
 * @category Class
 * @package  VereTech\SyncroMSP_PHPclient\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse2003Customer implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200_3_customer';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
'firstname' => 'string',
'lastname' => 'string',
'fullname' => 'string',
'business_name' => 'string',
'email' => 'string',
'phone' => 'string',
'mobile' => 'string',
'created_at' => 'string',
'updated_at' => 'string',
'pdf_url' => 'string',
'address' => 'string',
'address_2' => 'string',
'city' => 'string',
'state' => 'string',
'zip' => 'string',
'latitude' => 'string',
'longitude' => 'string',
'notes' => 'string',
'get_sms' => 'bool',
'opt_out' => 'bool',
'disabled' => 'bool',
'no_email' => 'bool',
'location_name' => 'string',
'location_id' => 'int',
'properties' => 'object',
'online_profile_url' => 'string',
'tax_rate_id' => 'int',
'notification_email' => 'string',
'invoice_cc_emails' => 'string',
'invoice_term_id' => 'int',
'referred_by' => 'string',
'ref_customer_id' => 'int',
'business_and_full_name' => 'string',
'business_then_name' => 'string',
'contacts' => '\VereTech\SyncroMSP_PHPclient\Client\Model\InlineResponse2003CustomerContacts[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
'firstname' => null,
'lastname' => null,
'fullname' => null,
'business_name' => null,
'email' => null,
'phone' => null,
'mobile' => null,
'created_at' => null,
'updated_at' => null,
'pdf_url' => null,
'address' => null,
'address_2' => null,
'city' => null,
'state' => null,
'zip' => null,
'latitude' => null,
'longitude' => null,
'notes' => null,
'get_sms' => null,
'opt_out' => null,
'disabled' => null,
'no_email' => null,
'location_name' => null,
'location_id' => null,
'properties' => null,
'online_profile_url' => null,
'tax_rate_id' => null,
'notification_email' => null,
'invoice_cc_emails' => null,
'invoice_term_id' => null,
'referred_by' => null,
'ref_customer_id' => null,
'business_and_full_name' => null,
'business_then_name' => null,
'contacts' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'firstname' => 'firstname',
'lastname' => 'lastname',
'fullname' => 'fullname',
'business_name' => 'business_name',
'email' => 'email',
'phone' => 'phone',
'mobile' => 'mobile',
'created_at' => 'created_at',
'updated_at' => 'updated_at',
'pdf_url' => 'pdf_url',
'address' => 'address',
'address_2' => 'address_2',
'city' => 'city',
'state' => 'state',
'zip' => 'zip',
'latitude' => 'latitude',
'longitude' => 'longitude',
'notes' => 'notes',
'get_sms' => 'get_sms',
'opt_out' => 'opt_out',
'disabled' => 'disabled',
'no_email' => 'no_email',
'location_name' => 'location_name',
'location_id' => 'location_id',
'properties' => 'properties',
'online_profile_url' => 'online_profile_url',
'tax_rate_id' => 'tax_rate_id',
'notification_email' => 'notification_email',
'invoice_cc_emails' => 'invoice_cc_emails',
'invoice_term_id' => 'invoice_term_id',
'referred_by' => 'referred_by',
'ref_customer_id' => 'ref_customer_id',
'business_and_full_name' => 'business_and_full_name',
'business_then_name' => 'business_then_name',
'contacts' => 'contacts'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'firstname' => 'setFirstname',
'lastname' => 'setLastname',
'fullname' => 'setFullname',
'business_name' => 'setBusinessName',
'email' => 'setEmail',
'phone' => 'setPhone',
'mobile' => 'setMobile',
'created_at' => 'setCreatedAt',
'updated_at' => 'setUpdatedAt',
'pdf_url' => 'setPdfUrl',
'address' => 'setAddress',
'address_2' => 'setAddress2',
'city' => 'setCity',
'state' => 'setState',
'zip' => 'setZip',
'latitude' => 'setLatitude',
'longitude' => 'setLongitude',
'notes' => 'setNotes',
'get_sms' => 'setGetSms',
'opt_out' => 'setOptOut',
'disabled' => 'setDisabled',
'no_email' => 'setNoEmail',
'location_name' => 'setLocationName',
'location_id' => 'setLocationId',
'properties' => 'setProperties',
'online_profile_url' => 'setOnlineProfileUrl',
'tax_rate_id' => 'setTaxRateId',
'notification_email' => 'setNotificationEmail',
'invoice_cc_emails' => 'setInvoiceCcEmails',
'invoice_term_id' => 'setInvoiceTermId',
'referred_by' => 'setReferredBy',
'ref_customer_id' => 'setRefCustomerId',
'business_and_full_name' => 'setBusinessAndFullName',
'business_then_name' => 'setBusinessThenName',
'contacts' => 'setContacts'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'firstname' => 'getFirstname',
'lastname' => 'getLastname',
'fullname' => 'getFullname',
'business_name' => 'getBusinessName',
'email' => 'getEmail',
'phone' => 'getPhone',
'mobile' => 'getMobile',
'created_at' => 'getCreatedAt',
'updated_at' => 'getUpdatedAt',
'pdf_url' => 'getPdfUrl',
'address' => 'getAddress',
'address_2' => 'getAddress2',
'city' => 'getCity',
'state' => 'getState',
'zip' => 'getZip',
'latitude' => 'getLatitude',
'longitude' => 'getLongitude',
'notes' => 'getNotes',
'get_sms' => 'getGetSms',
'opt_out' => 'getOptOut',
'disabled' => 'getDisabled',
'no_email' => 'getNoEmail',
'location_name' => 'getLocationName',
'location_id' => 'getLocationId',
'properties' => 'getProperties',
'online_profile_url' => 'getOnlineProfileUrl',
'tax_rate_id' => 'getTaxRateId',
'notification_email' => 'getNotificationEmail',
'invoice_cc_emails' => 'getInvoiceCcEmails',
'invoice_term_id' => 'getInvoiceTermId',
'referred_by' => 'getReferredBy',
'ref_customer_id' => 'getRefCustomerId',
'business_and_full_name' => 'getBusinessAndFullName',
'business_then_name' => 'getBusinessThenName',
'contacts' => 'getContacts'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['firstname'] = isset($data['firstname']) ? $data['firstname'] : null;
        $this->container['lastname'] = isset($data['lastname']) ? $data['lastname'] : null;
        $this->container['fullname'] = isset($data['fullname']) ? $data['fullname'] : null;
        $this->container['business_name'] = isset($data['business_name']) ? $data['business_name'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['pdf_url'] = isset($data['pdf_url']) ? $data['pdf_url'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['address_2'] = isset($data['address_2']) ? $data['address_2'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['zip'] = isset($data['zip']) ? $data['zip'] : null;
        $this->container['latitude'] = isset($data['latitude']) ? $data['latitude'] : null;
        $this->container['longitude'] = isset($data['longitude']) ? $data['longitude'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['get_sms'] = isset($data['get_sms']) ? $data['get_sms'] : null;
        $this->container['opt_out'] = isset($data['opt_out']) ? $data['opt_out'] : null;
        $this->container['disabled'] = isset($data['disabled']) ? $data['disabled'] : null;
        $this->container['no_email'] = isset($data['no_email']) ? $data['no_email'] : null;
        $this->container['location_name'] = isset($data['location_name']) ? $data['location_name'] : null;
        $this->container['location_id'] = isset($data['location_id']) ? $data['location_id'] : null;
        $this->container['properties'] = isset($data['properties']) ? $data['properties'] : null;
        $this->container['online_profile_url'] = isset($data['online_profile_url']) ? $data['online_profile_url'] : null;
        $this->container['tax_rate_id'] = isset($data['tax_rate_id']) ? $data['tax_rate_id'] : null;
        $this->container['notification_email'] = isset($data['notification_email']) ? $data['notification_email'] : null;
        $this->container['invoice_cc_emails'] = isset($data['invoice_cc_emails']) ? $data['invoice_cc_emails'] : null;
        $this->container['invoice_term_id'] = isset($data['invoice_term_id']) ? $data['invoice_term_id'] : null;
        $this->container['referred_by'] = isset($data['referred_by']) ? $data['referred_by'] : null;
        $this->container['ref_customer_id'] = isset($data['ref_customer_id']) ? $data['ref_customer_id'] : null;
        $this->container['business_and_full_name'] = isset($data['business_and_full_name']) ? $data['business_and_full_name'] : null;
        $this->container['business_then_name'] = isset($data['business_then_name']) ? $data['business_then_name'] : null;
        $this->container['contacts'] = isset($data['contacts']) ? $data['contacts'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets firstname
     *
     * @return string
     */
    public function getFirstname()
    {
        return $this->container['firstname'];
    }

    /**
     * Sets firstname
     *
     * @param string $firstname firstname
     *
     * @return $this
     */
    public function setFirstname($firstname)
    {
        $this->container['firstname'] = $firstname;

        return $this;
    }

    /**
     * Gets lastname
     *
     * @return string
     */
    public function getLastname()
    {
        return $this->container['lastname'];
    }

    /**
     * Sets lastname
     *
     * @param string $lastname lastname
     *
     * @return $this
     */
    public function setLastname($lastname)
    {
        $this->container['lastname'] = $lastname;

        return $this;
    }

    /**
     * Gets fullname
     *
     * @return string
     */
    public function getFullname()
    {
        return $this->container['fullname'];
    }

    /**
     * Sets fullname
     *
     * @param string $fullname fullname
     *
     * @return $this
     */
    public function setFullname($fullname)
    {
        $this->container['fullname'] = $fullname;

        return $this;
    }

    /**
     * Gets business_name
     *
     * @return string
     */
    public function getBusinessName()
    {
        return $this->container['business_name'];
    }

    /**
     * Sets business_name
     *
     * @param string $business_name business_name
     *
     * @return $this
     */
    public function setBusinessName($business_name)
    {
        $this->container['business_name'] = $business_name;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile mobile
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets pdf_url
     *
     * @return string
     */
    public function getPdfUrl()
    {
        return $this->container['pdf_url'];
    }

    /**
     * Sets pdf_url
     *
     * @param string $pdf_url pdf_url
     *
     * @return $this
     */
    public function setPdfUrl($pdf_url)
    {
        $this->container['pdf_url'] = $pdf_url;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets address_2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address_2'];
    }

    /**
     * Sets address_2
     *
     * @param string $address_2 address_2
     *
     * @return $this
     */
    public function setAddress2($address_2)
    {
        $this->container['address_2'] = $address_2;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return string
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param string $zip zip
     *
     * @return $this
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets latitude
     *
     * @return string
     */
    public function getLatitude()
    {
        return $this->container['latitude'];
    }

    /**
     * Sets latitude
     *
     * @param string $latitude latitude
     *
     * @return $this
     */
    public function setLatitude($latitude)
    {
        $this->container['latitude'] = $latitude;

        return $this;
    }

    /**
     * Gets longitude
     *
     * @return string
     */
    public function getLongitude()
    {
        return $this->container['longitude'];
    }

    /**
     * Sets longitude
     *
     * @param string $longitude longitude
     *
     * @return $this
     */
    public function setLongitude($longitude)
    {
        $this->container['longitude'] = $longitude;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets get_sms
     *
     * @return bool
     */
    public function getGetSms()
    {
        return $this->container['get_sms'];
    }

    /**
     * Sets get_sms
     *
     * @param bool $get_sms get_sms
     *
     * @return $this
     */
    public function setGetSms($get_sms)
    {
        $this->container['get_sms'] = $get_sms;

        return $this;
    }

    /**
     * Gets opt_out
     *
     * @return bool
     */
    public function getOptOut()
    {
        return $this->container['opt_out'];
    }

    /**
     * Sets opt_out
     *
     * @param bool $opt_out opt_out
     *
     * @return $this
     */
    public function setOptOut($opt_out)
    {
        $this->container['opt_out'] = $opt_out;

        return $this;
    }

    /**
     * Gets disabled
     *
     * @return bool
     */
    public function getDisabled()
    {
        return $this->container['disabled'];
    }

    /**
     * Sets disabled
     *
     * @param bool $disabled disabled
     *
     * @return $this
     */
    public function setDisabled($disabled)
    {
        $this->container['disabled'] = $disabled;

        return $this;
    }

    /**
     * Gets no_email
     *
     * @return bool
     */
    public function getNoEmail()
    {
        return $this->container['no_email'];
    }

    /**
     * Sets no_email
     *
     * @param bool $no_email no_email
     *
     * @return $this
     */
    public function setNoEmail($no_email)
    {
        $this->container['no_email'] = $no_email;

        return $this;
    }

    /**
     * Gets location_name
     *
     * @return string
     */
    public function getLocationName()
    {
        return $this->container['location_name'];
    }

    /**
     * Sets location_name
     *
     * @param string $location_name location_name
     *
     * @return $this
     */
    public function setLocationName($location_name)
    {
        $this->container['location_name'] = $location_name;

        return $this;
    }

    /**
     * Gets location_id
     *
     * @return int
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     *
     * @param int $location_id location_id
     *
     * @return $this
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets properties
     *
     * @return object
     */
    public function getProperties()
    {
        return $this->container['properties'];
    }

    /**
     * Sets properties
     *
     * @param object $properties properties
     *
     * @return $this
     */
    public function setProperties($properties)
    {
        $this->container['properties'] = $properties;

        return $this;
    }

    /**
     * Gets online_profile_url
     *
     * @return string
     */
    public function getOnlineProfileUrl()
    {
        return $this->container['online_profile_url'];
    }

    /**
     * Sets online_profile_url
     *
     * @param string $online_profile_url online_profile_url
     *
     * @return $this
     */
    public function setOnlineProfileUrl($online_profile_url)
    {
        $this->container['online_profile_url'] = $online_profile_url;

        return $this;
    }

    /**
     * Gets tax_rate_id
     *
     * @return int
     */
    public function getTaxRateId()
    {
        return $this->container['tax_rate_id'];
    }

    /**
     * Sets tax_rate_id
     *
     * @param int $tax_rate_id tax_rate_id
     *
     * @return $this
     */
    public function setTaxRateId($tax_rate_id)
    {
        $this->container['tax_rate_id'] = $tax_rate_id;

        return $this;
    }

    /**
     * Gets notification_email
     *
     * @return string
     */
    public function getNotificationEmail()
    {
        return $this->container['notification_email'];
    }

    /**
     * Sets notification_email
     *
     * @param string $notification_email notification_email
     *
     * @return $this
     */
    public function setNotificationEmail($notification_email)
    {
        $this->container['notification_email'] = $notification_email;

        return $this;
    }

    /**
     * Gets invoice_cc_emails
     *
     * @return string
     */
    public function getInvoiceCcEmails()
    {
        return $this->container['invoice_cc_emails'];
    }

    /**
     * Sets invoice_cc_emails
     *
     * @param string $invoice_cc_emails invoice_cc_emails
     *
     * @return $this
     */
    public function setInvoiceCcEmails($invoice_cc_emails)
    {
        $this->container['invoice_cc_emails'] = $invoice_cc_emails;

        return $this;
    }

    /**
     * Gets invoice_term_id
     *
     * @return int
     */
    public function getInvoiceTermId()
    {
        return $this->container['invoice_term_id'];
    }

    /**
     * Sets invoice_term_id
     *
     * @param int $invoice_term_id invoice_term_id
     *
     * @return $this
     */
    public function setInvoiceTermId($invoice_term_id)
    {
        $this->container['invoice_term_id'] = $invoice_term_id;

        return $this;
    }

    /**
     * Gets referred_by
     *
     * @return string
     */
    public function getReferredBy()
    {
        return $this->container['referred_by'];
    }

    /**
     * Sets referred_by
     *
     * @param string $referred_by referred_by
     *
     * @return $this
     */
    public function setReferredBy($referred_by)
    {
        $this->container['referred_by'] = $referred_by;

        return $this;
    }

    /**
     * Gets ref_customer_id
     *
     * @return int
     */
    public function getRefCustomerId()
    {
        return $this->container['ref_customer_id'];
    }

    /**
     * Sets ref_customer_id
     *
     * @param int $ref_customer_id ref_customer_id
     *
     * @return $this
     */
    public function setRefCustomerId($ref_customer_id)
    {
        $this->container['ref_customer_id'] = $ref_customer_id;

        return $this;
    }

    /**
     * Gets business_and_full_name
     *
     * @return string
     */
    public function getBusinessAndFullName()
    {
        return $this->container['business_and_full_name'];
    }

    /**
     * Sets business_and_full_name
     *
     * @param string $business_and_full_name business_and_full_name
     *
     * @return $this
     */
    public function setBusinessAndFullName($business_and_full_name)
    {
        $this->container['business_and_full_name'] = $business_and_full_name;

        return $this;
    }

    /**
     * Gets business_then_name
     *
     * @return string
     */
    public function getBusinessThenName()
    {
        return $this->container['business_then_name'];
    }

    /**
     * Sets business_then_name
     *
     * @param string $business_then_name business_then_name
     *
     * @return $this
     */
    public function setBusinessThenName($business_then_name)
    {
        $this->container['business_then_name'] = $business_then_name;

        return $this;
    }

    /**
     * Gets contacts
     *
     * @return \VereTech\SyncroMSP_PHPclient\Client\Model\InlineResponse2003CustomerContacts[]
     */
    public function getContacts()
    {
        return $this->container['contacts'];
    }

    /**
     * Sets contacts
     *
     * @param \VereTech\SyncroMSP_PHPclient\Client\Model\InlineResponse2003CustomerContacts[] $contacts contacts
     *
     * @return $this
     */
    public function setContacts($contacts)
    {
        $this->container['contacts'] = $contacts;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
